{"version":3,"sources":["../../../src/swc/__tests__/dirWorker.test.ts"],"sourcesContent":["import { Options } from \"@swc/core\";\nimport handleCompile from \"../dirWorker\";\nimport { CliOptions, DEFAULT_OUT_FILE_EXTENSION } from \"../options\";\nimport * as utilModule from '../util';\n\ntype HandleCompileOptions = {\n  cliOptions: CliOptions;\n  swcOptions: Options;\n  sync: false,\n  outDir: \"outDir\",\n  filename: string,\n  outFileExtension?: string;\n}\n\nconst createHandleCompileOptions = (options?: Partial<HandleCompileOptions>): HandleCompileOptions => ({\n  cliOptions: {\n    outDir: \"\",\n    outFile: \"\",\n    filename: \"\",\n    stripLeadingPaths: false,\n    filenames: [],\n    sync: false,\n    workers: undefined,\n    sourceMapTarget: undefined,\n    extensions: [],\n    watch: false,\n    copyFiles: false,\n    outFileExtension: \"\",\n    includeDotfiles: false,\n    deleteDirOnStart: false,\n    quiet: true,\n    only: [],\n    ignore: [],\n  },\n  swcOptions: {},\n  sync: false,\n  outDir: \"outDir\",\n  filename: \"\",\n  ...options,\n});\n\njest.mock('../util', () => ({\n  ...jest.requireActual(\"../util\"),\n  compile: jest.fn(),\n}));\n\ndescribe(\"dirWorker\", () => {\n  it('should call \"compile\" with the \"DEFAULT_OUT_FILE_EXTENSION\" when \"outFileExtension\" is undefined', async () => {\n    const filename = 'test';\n    const options = createHandleCompileOptions({\n      filename: `${filename}.ts`\n    });\n\n    try {\n      await handleCompile(options);\n    } catch (err) {\n      // We don't care about the error in this test, we want to make sure that \"compile\" was called\n    }\n\n    // Assert that subFunction was called with the correct parameter\n    expect(utilModule.compile).toHaveBeenCalledWith(options.filename, { sourceFileName: `../${options.filename}`}, options.sync, `${options.outDir}/${filename}.${DEFAULT_OUT_FILE_EXTENSION}`);\n  });\n});\n\ndescribe(\"dirWorker\", () => {\n  it('should call \"compile\" with \"outFileExtension\" when undefined', async () => {\n    const filename = 'test';\n    const options = createHandleCompileOptions({\n      filename: `${filename}.ts`,\n      outFileExtension: 'cjs'\n    });\n\n    try {\n      await handleCompile(options);\n    } catch (err) {\n      // We don't care about the error in this test, we want to make sure that \"compile\" was called\n    }\n\n    // Assert that subFunction was called with the correct parameter\n    expect(utilModule.compile).toHaveBeenCalledWith(options.filename, { sourceFileName: `../${options.filename}`}, options.sync, `${options.outDir}/${filename}.${options.outFileExtension}`);\n  });\n});\n"],"names":["createHandleCompileOptions","options","cliOptions","outDir","outFile","filename","stripLeadingPaths","filenames","sync","workers","undefined","sourceMapTarget","extensions","watch","copyFiles","outFileExtension","includeDotfiles","deleteDirOnStart","quiet","only","ignore","swcOptions","jest","mock","requireActual","compile","fn","describe","it","handleCompile","err","expect","utilModule","toHaveBeenCalledWith","sourceFileName","DEFAULT_OUT_FILE_EXTENSION"],"mappings":";;;;gEAC0B;yBAC6B;4DAC3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW5B,MAAMA,6BAA6B,CAACC,UAAmE,CAAA;QACrGC,YAAY;YACVC,QAAQ;YACRC,SAAS;YACTC,UAAU;YACVC,mBAAmB,KAAK;YACxBC,WAAW,EAAE;YACbC,MAAM,KAAK;YACXC,SAASC;YACTC,iBAAiBD;YACjBE,YAAY,EAAE;YACdC,OAAO,KAAK;YACZC,WAAW,KAAK;YAChBC,kBAAkB;YAClBC,iBAAiB,KAAK;YACtBC,kBAAkB,KAAK;YACvBC,OAAO,IAAI;YACXC,MAAM,EAAE;YACRC,QAAQ,EAAE;QACZ;QACAC,YAAY,CAAC;QACbb,MAAM,KAAK;QACXL,QAAQ;QACRE,UAAU;QACV,GAAGJ,OAAO;IACZ,CAAA;AAEAqB,KAAKC,IAAI,CAAC,WAAW,IAAO,CAAA;QAC1B,GAAGD,KAAKE,aAAa,CAAC,UAAU;QAChCC,SAASH,KAAKI,EAAE;IAClB,CAAA;AAEAC,SAAS,aAAa,IAAM;IAC1BC,GAAG,oGAAoG,UAAY;QACjH,MAAMvB,WAAW;QACjB,MAAMJ,UAAUD,2BAA2B;YACzCK,UAAU,CAAC,EAAEA,SAAS,GAAG,CAAC;QAC5B;QAEA,IAAI;YACF,MAAMwB,IAAAA,kBAAa,EAAC5B;QACtB,EAAE,OAAO6B,KAAK;QACZ,6FAA6F;QAC/F;QAEA,gEAAgE;QAChEC,OAAOC,MAAWP,OAAO,EAAEQ,oBAAoB,CAAChC,QAAQI,QAAQ,EAAE;YAAE6B,gBAAgB,CAAC,GAAG,EAAEjC,QAAQI,QAAQ,CAAC,CAAC;QAAA,GAAGJ,QAAQO,IAAI,EAAE,CAAC,EAAEP,QAAQE,MAAM,CAAC,CAAC,EAAEE,SAAS,CAAC,EAAE8B,mCAA0B,CAAC,CAAC;IAC5L;AACF;AAEAR,SAAS,aAAa,IAAM;IAC1BC,GAAG,gEAAgE,UAAY;QAC7E,MAAMvB,WAAW;QACjB,MAAMJ,UAAUD,2BAA2B;YACzCK,UAAU,CAAC,EAAEA,SAAS,GAAG,CAAC;YAC1BU,kBAAkB;QACpB;QAEA,IAAI;YACF,MAAMc,IAAAA,kBAAa,EAAC5B;QACtB,EAAE,OAAO6B,KAAK;QACZ,6FAA6F;QAC/F;QAEA,gEAAgE;QAChEC,OAAOC,MAAWP,OAAO,EAAEQ,oBAAoB,CAAChC,QAAQI,QAAQ,EAAE;YAAE6B,gBAAgB,CAAC,GAAG,EAAEjC,QAAQI,QAAQ,CAAC,CAAC;QAAA,GAAGJ,QAAQO,IAAI,EAAE,CAAC,EAAEP,QAAQE,MAAM,CAAC,CAAC,EAAEE,SAAS,CAAC,EAAEJ,QAAQc,gBAAgB,CAAC,CAAC;IAC1L;AACF"}